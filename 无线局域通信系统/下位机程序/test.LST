C51 COMPILER V9.00   TEST                                                                  03/15/2015 20:10:35 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE TEST
OBJECT MODULE PLACED IN test.OBJ
COMPILER INVOKED BY: C:\Program Files (x86)\Keil\C51\BIN\C51.EXE test.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          //#include<reg52.h>
   2          #include<C:\Program Files (x86)\Keil\C51\INC\STC\STC89C5xRC.H>
   3          #include <intrins.h>
   4          
   5          #define EEPROM_START_ADDRESS 0x2000//EEPROM起始地址设置
   6          #define NOP() _nop_()//nop指令，一条消耗1个机器周期，此时外部晶振为12MHZ，故机器周期为1微秒
   7          
   8          typedef unsigned char UINT8;
   9          typedef unsigned int UINT16;
  10          typedef unsigned long UINT32;
  11          
  12          
  13          
  14          
  15          
  16          UINT8 flag=0,a, b;
  17          UINT8 receive[4]={0,0,0,0};//接收缓存
  18          
  19          
  20          
  21          /*********微秒级延时*****************************/
  22          void Delay_US(UINT16 us)
  23          {
  24   1      do{
  25   2      NOP();
  26   2      }while(--us > 0);       
  27   1      }
  28          
  29          /*********毫秒级延时*****************************/
  30          void Delay_MS(UINT16 ms)
  31          {
  32   1      for(;ms>0;ms--){
  33   2      Delay_US(1000);
  34   2      }
  35   1      }
  36          
  37          /*********使能EEPROM*****************************/
  38          void EEPROMEnable()
  39          {
  40   1      ISP_CONTR = 0x81;//使能EEPROM，并设置等待时间。
  41   1      }
  42          
  43          /*********启动EEPROM******************************/
  44          void EEPROMStart()
  45          {
  46   1      ISP_TRIG = 0x46;//先后写入这两个数据，以触发EEPROM启动
  47   1      ISP_TRIG = 0xB9;
  48   1      }
  49          
  50          /********禁用EEPROM*******************************/
  51          void EEPROMDisable()
  52          {
  53   1      ISP_DATA = 0x00;//禁用后，对数据存储空间清零，以免造成干扰
  54   1      ISP_ADDRH = 0x00;
  55   1      ISP_ADDRL = 0x00;//地址位清零
C51 COMPILER V9.00   TEST                                                                  03/15/2015 20:10:35 PAGE 2   

  56   1      ISP_CONTR = 0x00;
  57   1      }
  58          
  59          /**********擦除扇形区*****************************/
  60          void EEPROMSectorErase(UINT16 addr)
  61          {
  62   1      EEPROMEnable(); 
  63   1      //      EA =0;
  64   1      ISP_CMD = 0x03;//触发命令，擦除扇区
  65   1      ISP_ADDRH = (UINT8)( (addr + EEPROM_START_ADDRESS)>>8 );
  66   1      ISP_ADDRL = (UINT8) addr;
  67   1      EEPROMStart();
  68   1      Delay_MS(10);//擦除等待时间，约10毫秒
  69   1      Delay_US(900);//@？？？万一10毫秒延时等待不够，增加900微秒的延时等待时间，确保扇区擦除完成。
  70   1      EEPROMDisable();
  71   1      //      EA = 1;
  72   1      }
  73          
  74          
  75          /**********写入一个字节****************************/
  76          void EEPROMWriteByte(UINT16 addr,UINT8 byte)
  77          {
  78   1      EEPROMEnable(); 
  79   1      //      EA =0;
  80   1      ISP_CMD = 0x02;//写模式
  81   1      ISP_ADDRH = (UINT8)( (addr + EEPROM_START_ADDRESS)>>8 );
  82   1      ISP_ADDRL = (UINT8) addr;
  83   1      ISP_DATA = byte;//写入数据，（一个字节）
  84   1      EEPROMStart();
  85   1      Delay_US(60);//写字节的等待时间
  86   1      EEPROMDisable();
  87   1      //      EA = 1;
  88   1      }
  89          
  90          /**********读取字节*********************************/
  91          UINT8 EEPROMReadByte(UINT16 addr)
  92          {
  93   1      EEPROMEnable(); 
  94   1      //      EA =0;
  95   1      ISP_CMD = 0x01;//读模式
  96   1      ISP_ADDRH = (UINT8)( (addr + EEPROM_START_ADDRESS)>>8 );
  97   1      ISP_ADDRL = (UINT8) addr;       
  98   1      EEPROMStart();  
  99   1      Delay_US(11);   
 100   1      return (ISP_DATA);
 101   1      //      EA = 1;
 102   1      }
 103          
 104          /*******延时函数*************/
 105          void delay(unsigned int i)
 106          {
 107   1          unsigned char j;
 108   1          for(i; i > 0; i--)    //循环600*255次 机器在这里执行需要一段时间 也就达到了延时效果
 109   1              for(j = 255; j > 0; j--);
 110   1      }
 111          
 112          void ser() interrupt 4
 113          {
 114   1         
 115   1              static unsigned char count=0;   //串口接收计数的变量
 116   1              RI=0;                   //先把接收标志位清零
 117   1               b=EEPROMReadByte(0);
C51 COMPILER V9.00   TEST                                                                  03/15/2015 20:10:35 PAGE 3   

 118   1              receive[count]=SBUF;
 119   1      
 120   1              if(receive[count]==0xaa)                                                //控制位        当输入首位为0xaa
 121   1              {
 122   2                              count=1;
 123   2              }
 124   1          else if(receive[count]==0xbb)                                                //写地址位       当输入首位为0xbb
 125   1              {
 126   2                          count=1;                                                                    
 127   2              }
 128   1              else if(receive[count]==0xdd)                                            //写地址位       当输入首位为0xbb
 129   1              {
 130   2                          count=1;                                                                    
 131   2              }
 132   1              else if(receive[0]==0xaa&&receive[count]==b)            //标识位两个字节
 133   1              {
 134   2                      count=2;
 135   2              }
 136   1              else if(count==2)
 137   1              {
 138   2                      count++;
 139   2              }
 140   1              else if(count==3&&receive[count]==~receive[2])   //校验位为控制位取反
 141   1              {
 142   2                      flag=1;
 143   2                      count=0;
 144   2                      
 145   2              }
 146   1              
 147   1              else if(count==1)                   
 148   1              {
 149   2                              
 150   2                       if(receive[0]==0xbb)                                            //写地址位       当输入首位为0xbb
 151   2                      {
 152   3                              flag=2;
 153   3                              count=0;
 154   3                      }
 155   2                      else if(receive[0]==0xdd&&receive[1]==b)                                                   // 查询                        当输入首位为0xdd
 156   2                      {
 157   3                              flag=4;         
 158   3                              count=0;        
 159   3                      }
 160   2                      else
 161   2                      {
 162   3                              count=0;
 163   3                      }
 164   2      
 165   2              }
 166   1              
 167   1              
 168   1              
 169   1              else if(receive[count]==0xcc)                                           // 读地址位              当输入首位为0xcc
 170   1              {
 171   2                          flag=3;             
 172   2                              count=0;                                                
 173   2              }
 174   1      
 175   1              else
 176   1              {
 177   2                      count=0;
 178   2              }
 179   1      
C51 COMPILER V9.00   TEST                                                                  03/15/2015 20:10:35 PAGE 4   

 180   1      }
 181          
 182          void main()
 183          {
 184   1              TMOD=0x20;       //设置定时器1为工作方式2
 185   1              TH1=0xfd;
 186   1              TL1=0xfd;        //将波特率设为9600
 187   1              TR1=1;           //启动定时器1
 188   1              REN=1;           //接收允许控制位。
 189   1              SM0=0;
 190   1              SM1=1;           //SM0SM1=01,对应串口方式1，波特率可变。
 191   1              EA=1;            //打开总中断
 192   1              ES=1;            //打开串口中断
 193   1              
 194   1              while(1)
 195   1              {
 196   2                      if(flag==1)                                                     //控制位
 197   2                              {
 198   3                                      ES=0;
 199   3                                      flag=0;
 200   3                                      P0=receive[2];
 201   3                                      SBUF=P0; //成功接收数据，返回控制位
 202   3                                      P1=0xfe;  //P1.0亮
 203   3                                      delay(600); // 调用延时程序  等待一段时间后熄灭 
 204   3                                      P1=0xff;        //置P1口为高电平 熄灭P1口8个LED灯
 205   3                                      delay(600); // 调用延时程序
 206   3                                      while(!TI);             //TI发送中断标志位，用于指示一帧信息是否发送完成。
 207   3                                      TI=0;
 208   3                                      ES=1;
 209   3      
 210   3                              }
 211   2                      else if(flag==2)                                  // 写放地址码
 212   2                              {   
 213   3                                      ES=0;
 214   3                                      flag=0;
 215   3                                      b=receive[1];
 216   3                                      EEPROMSectorErase(0);             // 擦除第1个扇区（2000h~21FFh）
 217   3                          EEPROMWriteByte(0,b);         // 对EEPROM区2002h写入b
 218   3                                      SBUF=EEPROMReadByte(0);
 219   3                                      P1=0xfd;  //P1.1亮
 220   3                                      delay(600); // 调用延时程序  等待一段时间后熄灭 
 221   3                                      P1=0xff;        //置P1口为高电平 熄灭P1口8个LED灯
 222   3                                      delay(600); // 调用延时程序
 223   3                                      while(!TI);             //TI发送中断标志位，用于指示一帧信息是否发送完成。
 224   3                                      TI=0;
 225   3                                      ES=1;
 226   3                              }
 227   2                      else if(flag==3)                                        //读地址码
 228   2                          {
 229   3                                      ES=0;
 230   3                                      flag=0;
 231   3                                      SBUF=EEPROMReadByte(0);
 232   3                                      P1=0xfd;  //P1.1亮
 233   3                                      delay(600); // 调用延时程序  等待一段时间后熄灭 
 234   3                                      P1=0xff;        //置P1口为高电平 熄灭P1口8个LED灯
 235   3                                      delay(600); // 调用延时程序
 236   3                                      while(!TI);             //TI发送中断标志位，用于指示一帧信息是否发送完成。
 237   3                                      TI=0;
 238   3                                      ES=1;   
 239   3                              }
 240   2                       else if(flag==4)                                       //查询状态
 241   2                          {
C51 COMPILER V9.00   TEST                                                                  03/15/2015 20:10:35 PAGE 5   

 242   3                                      ES=0;
 243   3                                      flag=0;
 244   3                                      SBUF=P0;
 245   3                                      P1=0xfe;  //P1.0亮
 246   3                                      delay(600); // 调用延时程序  等待一段时间后熄灭 
 247   3                                      P1=0xff;        //置P1口为高电平 熄灭P1口8个LED灯
 248   3                                      delay(600); // 调用延时程序
 249   3                                      while(!TI);             //TI发送中断标志位，用于指示一帧信息是否发送完成。
 250   3                                      TI=0;
 251   3                                      ES=1;   
 252   3                              } 
 253   2              }
 254   1      }
 255          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    501    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
